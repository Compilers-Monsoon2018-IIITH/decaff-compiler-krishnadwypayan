//
//  scanner.h
//  DecafCompiler
//
//  Created by Krishna Dwypayan on 19/09/18.
//  Copyright Â© 2018 Krishna Dwypayan. All rights reserved.
//

#ifndef scanner_h
#define scanner_h

#include <stdio.h>

#define MaxIdentLen 31    // Maximum length for identifiers

typedef enum {
    T_Class = 256, T_Void, T_Int, T_Boolean, T_If, T_Else, T_For,
    T_Return, T_Break, T_Continue, T_Equal, T_PlusEqual, T_MinusEqual,
    T_LesserEqual, T_GreaterEqual, T_EqualEqual, T_NotEqual, T_And, T_Or,
    T_BoolConstant, T_Identifier, T_IntConstant, T_DoubleConstant,
    T_StringConstant
} TokenType;

/* Typedef: YYSTYPE
 * ----------------
 * Defines the union type that is used by the scanner to store
 * attibute information about tokens as they are scanned. This
 * type definition will be generated by Yacc in the later assignments.
 */
typedef union {
    int integerConstant;
    bool boolConstant;
    char *stringConstant;
    double doubleConstant;
    char identifier[MaxIdentLen+1]; // +1 for terminating null
} YYSTYPE;


/* Global variable: yylval
 * -----------------------
 * Strange name, but by convention, this is the name of union that
 * is written to by scanner and read by parser containing information
 * about the lexeme just scanned.
 */
extern YYSTYPE yylval;

extern char *yytext;      // Text of lexeme just scanned


int yylex();              // Defined in the generated lex.yy.c file
void yyrestart(FILE *fp); // ditto


void InitScanner();                 // Defined in scanner.l user subroutines

#endif /* scanner_h */
